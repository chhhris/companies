exit
correctly_sorted
sorted_mines
exit
c
mines1 == mines
mines1 = arg
mines
exit
arg
mines
exit
mines = arg
arg
mines = [1]
mines
c
sorted_mines
exit
sorted_mines
exit
minez = File.open('sorted_mines.txt').map {|mine| mine.strip }
minez = File.open('sorted_mines.txt').map {|mine| mine}
minez = File.open('sorted_mines.txt').gsub('\n', '').map {|mine| mine}
minez
minez = File.open('sorted_mines.txt').map {|mine| mine}
puts minez
minez.class
minez
minez.methods - Object.methods
minez
minez = File.open('sorted_mines.txt').map
minez
minez = File.read('sorted_mines.txt')
minez = File.open('sorted_mines.txt').map(&:read)
minez = File.open('sorted_mines.txt').map(&:puts)
minez = File.open('sorted_mines.txt').map(&:p)
minez = File.open('sorted_mines.txt').map(&:mine)
minez
minez = File.open('sorted_mines.txt').map {|mine| mine}
minez
minez = File.open('sorted_mines.txt').each {|mine| mine}
File.open('sorted_mines.txt').each {|mine| puts mine}
File.open('sorted_mines.txt')
c
sorted_mines
exit
sorted_mines
c
sorted_mines
c
exit
exot
sorted_mines
c
total_blasts_by_mine
blast_radius_by_mine
mines
sorted_mines
exit
mines
sorted_mines
c
arg
exit
mine_blast_evaluator = MineBlastEvaluator.new(TEST_DATA)
TEST_DATA
c
arg
exit
EXIT
@test_data
c
sorted_mines
c
arg
exit
blast_radius_by_mine
sorted_mines
c
x
exit
ENV['TEST']
exit
EXIT
ENV['TEST']
exit
ENV['TEST']
c
ENV['TEST'] = 'true'
c
ENV['TEST']
c
ENV['TEST'] = 'true'
exit
ENV['TEST'] = 'true'
ENV['TEST'] = true
exit
EXIT
ENV['TEST']
exit
total_blasts_by_mine.values.map(&:length)
blast_radius_by_mine.values.map(&:length)
blast_radius_by_mine.values
blast_radius_by_mine
exit
total_blasts_by_mine['0 0 0']
total_blasts_by_mine
get_mines_in_radius(child_mine)
blast_radius_by_mine
child_mine
mine
exit
blast_radius
total_blasts_by_mine[mine] = blast_radius
total_blasts_by_mine[mine] = blast_radius if blast_radius.length > 0
total_blasts_by_mine[mine] << blast_radius if blast_radius.length > 0
mine
blast_radius
total_blasts_by_mine
blast_radius_by_mine
exit
total_blasts_by_mine
blast_radius
mine
exit
blast_radius_by_mine.each {|mine, blast_radius| puts "mine #{mine} blast_radius #{blast_radius}"}
blast_radius_by_mine
exit
total_blasts_by_mine
blast_radius_by_mine
child_mine
blast_radius
c
blast_radius
child_mine
exit
total_blasts_by_mine
blast_radius_by_mine
child_mine
blast_radius_by_mine
blast_radius_by_mine[child_mine]
child_mine
mine
c
(total_blasts_by_mine[mine].include? child_blast_radius_mine) || (mine == child_blast_radius_mine)
child_blast_radius_mine
mine
total_blasts_by_mine
c
total_blasts_by_mine
add_downstream_blasts
mine == child_blast_radius_mine
(total_blasts_by_mine[mine].include? child_blast_radius_mine) || (mine == child_blast_radius_mine)
mine
child_blast_radius_mine
c
child_blast_radius_mine
total_blasts_by_mine[mine]
total_blasts_by_mine
child_blast_radius_mine
blast_radius_by_mine[child_mine]
child_mine
mine
total_blasts_by_mine[mine].include? child_blast_radius_mine
mine == child_blast_radius_mine
c
mine == child_blast_radius_mine
total_blasts_by_mine[mine].include? child_blast_radius_mine
child_blast_radius_mine
blast_radius_by_mine
child_mine
blast_radius_by_mine[child_mine]
mine
exit
blast_radius_by_mine
current_mine
c
current_mine
mines
blast_radius_by_mine
c
blast_radius_by_mine
c
blast_radius_by_mine
c
blast_radius_by_mine
c
blast_radius_by_mine
current_mine
c
get_mines_in_radii(current_mine)
mines_in_radius
exit
mine_within_radius(current_mine, mine)
mine == current_mine
mine = mines[1]
mines
current_mine
exit
child_mine
blast_radius_by_mine[child_mine]
c
blast_radius_by_mine[child_mine]
child_mine
c
blast_radius_by_mine[child_mine]
child_mine
next
mine
mine == child_blast_radius_mine
total_blasts_by_mine[mine].include? child_blast_radius_mine
total_blasts_by_mine
child_blast_radius_mine = blast_radius_by_mine[child_mine].first
blast_radius_by_mine[child_mine]
blast_radius_by_mine
child_mine
mine
exit
total_blasts_by_mine[mine].include? child_blast_radius_mine
total_blasts_by_mine[mine]
child_blast_radius_mine
child_mine
blast_radius_by_mine[child_mine]
mine
child_blast_radius_mine
next
mine == child_blast_radius_mine
mine
total_blasts_by_mine[mine].include? child_blast_radius_mine
child_blast_radius_mine
total_blasts_by_mine
child_blast_radius_mine
exit
blast_radius_by_mine[child_mine]
mine
ine
blast_radius_by_mine[child_mine]
child_mine
blast_radius_by_mine.keys
blast_radius_by_mine
mine
child_mine
exit
get_mines_in_radius(current_mine)
exit
get_mines_in_radius(current_mine)
exit
c
get_mines_in_radius(current_mine)
blast_radius_by_mine[current_mine]
blast_radius_by_mine
exit
child_mine
@extended_blast_radius
mines_in_blast_radius(child_mine)
